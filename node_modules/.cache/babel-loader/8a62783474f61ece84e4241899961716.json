{"ast":null,"code":"//let BASE_URL = \"https://nyhetssidan-jkl.fly.dev\"\nconst BASE_URL = \"http://localhost:3001\";\n\nasync function fetchAccountWithEmail(account) {\n  const response = await fetch(BASE_URL + \"/getAccountWithEmail\", {\n    method: 'POST',\n    body: JSON.stringify(account),\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  });\n  let data = response;\n\n  if (data.status === 500) {\n    return await data.json();\n  }\n\n  data = await data.json();\n  return data[0];\n}\n\nasync function loginWithEmail(account) {\n  const response = await fetch(BASE_URL + \"/loginWithEmail\", {\n    method: 'POST',\n    body: JSON.stringify(account),\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  });\n  let data = response;\n\n  if (data.status === 500) {\n    return await data.json();\n  }\n\n  data = await data.json();\n  return data[0];\n}\n\nasync function createAccount(account) {\n  const response = await fetch(BASE_URL + \"/createAccount\", {\n    method: 'POST',\n    body: JSON.stringify(account),\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  });\n  const data = await response.json();\n  return data;\n}\n\nasync function updateAccount(account) {\n  const response = await fetch(BASE_URL + \"/updateAccount\", {\n    method: 'POST',\n    body: JSON.stringify(account),\n    headers: {\n      'content-type': 'application/json'\n    }\n  });\n  const data = await response.json();\n  return data;\n}\n\nasync function updatePassword(account) {\n  const response = await fetch(BASE_URL + \"/updatePassword\", {\n    method: 'POST',\n    body: JSON.stringify(account),\n    headers: {\n      'content-type': 'application/json'\n    }\n  });\n  const data = await response.json();\n  return await data;\n}\n\nasync function getAccountWithToken(account) {\n  const response = await fetch(BASE_URL + \"/getAccountWithToken\", {\n    method: 'POST',\n    body: JSON.stringify(account),\n    headers: {\n      'content-type': 'application/json'\n    }\n  });\n  const data = await response.json();\n  return data[0];\n}\n\nexport { fetchAccountWithEmail, getAccountWithToken, loginWithEmail, createAccount, updateAccount, updatePassword };","map":{"version":3,"names":["BASE_URL","fetchAccountWithEmail","account","response","fetch","method","body","JSON","stringify","headers","data","status","json","loginWithEmail","createAccount","updateAccount","updatePassword","getAccountWithToken"],"sources":["C:/Users/itsme.000/OneDrive/Skrivbord/Nyheter-main/client/src/dbUtils/accountActions.js"],"sourcesContent":["//let BASE_URL = \"https://nyhetssidan-jkl.fly.dev\"\nconst BASE_URL = \"http://localhost:3001\"\n\nasync function fetchAccountWithEmail(account) {\n  const response = await fetch(BASE_URL + \"/getAccountWithEmail\", {\n    method: 'POST',\n    body: JSON.stringify(account),\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  });\n  let data = response;\n  if (data.status === 500) {\n    return await data.json()\n  }\n  data = await data.json();\n  return data[0];\n}\n\nasync function loginWithEmail(account) {\n  const response = await fetch(BASE_URL + \"/loginWithEmail\", {\n    method: 'POST',\n    body: JSON.stringify(account),\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  });\n  let data = response;\n  if (data.status === 500) {\n    return await data.json()\n  }\n  data = await data.json();\n  return data[0];\n}\n\nasync function createAccount(account) {\n  const response = await fetch(BASE_URL + \"/createAccount\", {\n    method: 'POST',\n    body: JSON.stringify(account),\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  })\n  const data = await response.json();\n  return data;\n}\n\nasync function updateAccount(account) {\n  const response = await fetch(BASE_URL + \"/updateAccount\", {\n    method: 'POST',\n    body: JSON.stringify(account),\n    headers: {\n      'content-type': 'application/json'\n    }\n  })\n  const data = await response.json();\n  return data;\n}\n\nasync function updatePassword(account) {\n  const response = await fetch(BASE_URL + \"/updatePassword\", {\n    method: 'POST',\n    body: JSON.stringify(account),\n    headers: {\n      'content-type': 'application/json'\n    }\n  })\n  const data = await response.json();\n  return await data;\n}\n\nasync function getAccountWithToken(account){\n  const response = await fetch(BASE_URL + \"/getAccountWithToken\", {\n    method: 'POST',\n    body: JSON.stringify(account),\n    headers: {\n      'content-type': 'application/json'\n    }\n  })\n  const data = await response.json();\n  return data[0];\n}\n\nexport {\n  fetchAccountWithEmail,\n  getAccountWithToken,\n  loginWithEmail,\n  createAccount,\n  updateAccount,\n  updatePassword\n}\n"],"mappings":"AAAA;AACA,MAAMA,QAAQ,GAAG,uBAAjB;;AAEA,eAAeC,qBAAf,CAAqCC,OAArC,EAA8C;EAC5C,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACJ,QAAQ,GAAG,sBAAZ,EAAoC;IAC9DK,MAAM,EAAE,MADsD;IAE9DC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeN,OAAf,CAFwD;IAG9DO,OAAO,EAAE;MACP,gBAAgB;IADT;EAHqD,CAApC,CAA5B;EAOA,IAAIC,IAAI,GAAGP,QAAX;;EACA,IAAIO,IAAI,CAACC,MAAL,KAAgB,GAApB,EAAyB;IACvB,OAAO,MAAMD,IAAI,CAACE,IAAL,EAAb;EACD;;EACDF,IAAI,GAAG,MAAMA,IAAI,CAACE,IAAL,EAAb;EACA,OAAOF,IAAI,CAAC,CAAD,CAAX;AACD;;AAED,eAAeG,cAAf,CAA8BX,OAA9B,EAAuC;EACrC,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACJ,QAAQ,GAAG,iBAAZ,EAA+B;IACzDK,MAAM,EAAE,MADiD;IAEzDC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeN,OAAf,CAFmD;IAGzDO,OAAO,EAAE;MACP,gBAAgB;IADT;EAHgD,CAA/B,CAA5B;EAOA,IAAIC,IAAI,GAAGP,QAAX;;EACA,IAAIO,IAAI,CAACC,MAAL,KAAgB,GAApB,EAAyB;IACvB,OAAO,MAAMD,IAAI,CAACE,IAAL,EAAb;EACD;;EACDF,IAAI,GAAG,MAAMA,IAAI,CAACE,IAAL,EAAb;EACA,OAAOF,IAAI,CAAC,CAAD,CAAX;AACD;;AAED,eAAeI,aAAf,CAA6BZ,OAA7B,EAAsC;EACpC,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACJ,QAAQ,GAAG,gBAAZ,EAA8B;IACxDK,MAAM,EAAE,MADgD;IAExDC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeN,OAAf,CAFkD;IAGxDO,OAAO,EAAE;MACP,gBAAgB;IADT;EAH+C,CAA9B,CAA5B;EAOA,MAAMC,IAAI,GAAG,MAAMP,QAAQ,CAACS,IAAT,EAAnB;EACA,OAAOF,IAAP;AACD;;AAED,eAAeK,aAAf,CAA6Bb,OAA7B,EAAsC;EACpC,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACJ,QAAQ,GAAG,gBAAZ,EAA8B;IACxDK,MAAM,EAAE,MADgD;IAExDC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeN,OAAf,CAFkD;IAGxDO,OAAO,EAAE;MACP,gBAAgB;IADT;EAH+C,CAA9B,CAA5B;EAOA,MAAMC,IAAI,GAAG,MAAMP,QAAQ,CAACS,IAAT,EAAnB;EACA,OAAOF,IAAP;AACD;;AAED,eAAeM,cAAf,CAA8Bd,OAA9B,EAAuC;EACrC,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACJ,QAAQ,GAAG,iBAAZ,EAA+B;IACzDK,MAAM,EAAE,MADiD;IAEzDC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeN,OAAf,CAFmD;IAGzDO,OAAO,EAAE;MACP,gBAAgB;IADT;EAHgD,CAA/B,CAA5B;EAOA,MAAMC,IAAI,GAAG,MAAMP,QAAQ,CAACS,IAAT,EAAnB;EACA,OAAO,MAAMF,IAAb;AACD;;AAED,eAAeO,mBAAf,CAAmCf,OAAnC,EAA2C;EACzC,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACJ,QAAQ,GAAG,sBAAZ,EAAoC;IAC9DK,MAAM,EAAE,MADsD;IAE9DC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeN,OAAf,CAFwD;IAG9DO,OAAO,EAAE;MACP,gBAAgB;IADT;EAHqD,CAApC,CAA5B;EAOA,MAAMC,IAAI,GAAG,MAAMP,QAAQ,CAACS,IAAT,EAAnB;EACA,OAAOF,IAAI,CAAC,CAAD,CAAX;AACD;;AAED,SACET,qBADF,EAEEgB,mBAFF,EAGEJ,cAHF,EAIEC,aAJF,EAKEC,aALF,EAMEC,cANF"},"metadata":{},"sourceType":"module"}