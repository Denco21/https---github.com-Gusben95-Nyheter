{"ast":null,"code":"//const BASE_URL = \"https://nyhetssidan-jkl.fly.dev\"\nconst BASE_URL = \"http://localhost:3001\";\n\nasync function fetchArticles() {\n  const response = await fetch(BASE_URL + \"/allArticles\");\n  const data = await response.json();\n  return data;\n}\n\nasync function fetchArticlesByCategory(category) {\n  const response = await fetch(BASE_URL + \"/articlesByCategory\", {\n    method: 'POST',\n    body: JSON.stringify(category),\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  });\n  const data = await response.json();\n  return data;\n}\n\nasync function fetchArticlesBySearch(searchInput) {\n  const response = await fetch(BASE_URL + \"/articlesBySearch\", {\n    method: 'POST',\n    body: JSON.stringify(searchInput),\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  });\n  const data = await response.json();\n  return data;\n}\n\nasync function postArticle(article) {\n  const response = await fetch(BASE_URL + \"/postArticle\", {\n    method: 'POST',\n    body: JSON.stringify(article),\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  });\n  const data = await response.json();\n  return data;\n}\n\nasync function deleteArticle(article) {\n  const response = await fetch(BASE_URL + \"/deleteArticle\", {\n    method: 'POST',\n    body: JSON.stringify(article),\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  });\n  const data = await response.json();\n  return data;\n}\n\nasync function updateArticle(article) {\n  const response = await fetch(BASE_URL + \"/updateArticle\", {\n    method: 'POST',\n    body: JSON.stringify(article),\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  });\n  const data = await response.json();\n  return data;\n}\n\nasync function incrementViewCount(article) {\n  const response = await fetch(BASE_URL + \"/incrementViewCount\", {\n    method: 'POST',\n    body: JSON.stringify(article),\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  });\n  const data = await response.json();\n  return data;\n}\n/*Should be moved to ENV variable */\n\n\nasync function fetchArticleAndSendToDatabase(stateArticles) {\n  let api_key = process.env.REACT_APP_API_KEY;\n  let url = \"https://newsapi.org/v2/everything?q=funny&apiKey=\" + api_key;\n  const response = await fetch(url);\n  const data = await response.json();\n  const randomNumber = Math.round(Math.random() * 99);\n  const article = data.articles[randomNumber];\n  const articleToDB = {\n    title: article.title,\n    shortDescription: article.description,\n    mainText: article.content,\n    categories: [\"utrikes\"],\n    author: article.author,\n    images: [article.urlToImage]\n  };\n  let duplicate = false;\n  stateArticles.forEach(articleFromState => {\n    if (articleFromState.title === articleToDB.title) {\n      duplicate = true;\n    }\n  });\n\n  if (!duplicate) {\n    return articleToDB;\n  }\n}\n\nexport { fetchArticles, fetchArticlesByCategory, fetchArticlesBySearch, postArticle, deleteArticle, updateArticle, incrementViewCount, fetchArticleAndSendToDatabase };","map":{"version":3,"names":["BASE_URL","fetchArticles","response","fetch","data","json","fetchArticlesByCategory","category","method","body","JSON","stringify","headers","fetchArticlesBySearch","searchInput","postArticle","article","deleteArticle","updateArticle","incrementViewCount","fetchArticleAndSendToDatabase","stateArticles","api_key","process","env","REACT_APP_API_KEY","url","randomNumber","Math","round","random","articles","articleToDB","title","shortDescription","description","mainText","content","categories","author","images","urlToImage","duplicate","forEach","articleFromState"],"sources":["C:/Users/itsme.000/OneDrive/Skrivbord/Nyheter-main/client/src/dbUtils/articleActions.js"],"sourcesContent":["//const BASE_URL = \"https://nyhetssidan-jkl.fly.dev\"\nconst BASE_URL = \"http://localhost:3001\"\n\nasync function fetchArticles() {\n  const response = await fetch(BASE_URL + \"/allArticles\");\n  const data = await response.json();\n  return data;\n}\n\nasync function fetchArticlesByCategory(category) {\n  const response = await fetch(BASE_URL + \"/articlesByCategory\", {\n    method: 'POST',\n    body: JSON.stringify(category),\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  });\n  const data = await response.json();\n  return data;\n}\n\nasync function fetchArticlesBySearch(searchInput) {\n  const response = await fetch(BASE_URL + \"/articlesBySearch\", {\n    method: 'POST',\n    body: JSON.stringify(searchInput),\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  });\n  const data = await response.json();\n  return data;\n}\n\nasync function postArticle(article) {\n  const response = await fetch(BASE_URL + \"/postArticle\", {\n    method: 'POST',\n    body: JSON.stringify(article),\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  });\n  const data = await response.json();\n  return data;\n}\n\nasync function deleteArticle(article) {\n  const response = await fetch(BASE_URL + \"/deleteArticle\", {\n    method: 'POST',\n    body: JSON.stringify(article),\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  });\n  const data = await response.json();\n  return data;\n}\n\nasync function updateArticle(article) {\n  const response = await fetch(BASE_URL + \"/updateArticle\", {\n    method: 'POST',\n    body: JSON.stringify(article),\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  });\n  const data = await response.json();\n  return data;\n}\n\nasync function incrementViewCount(article) {\n  const response = await fetch(BASE_URL + \"/incrementViewCount\", {\n    method: 'POST',\n    body: JSON.stringify(article),\n    headers: {\n      'Content-Type':'application/json'\n    }\n  });\n  const data = await response.json();\n  return data;\n}\n\n\n/*Should be moved to ENV variable */\nasync function fetchArticleAndSendToDatabase(stateArticles) {\n  let api_key = process.env.REACT_APP_API_KEY;\n  let url = \"https://newsapi.org/v2/everything?q=funny&apiKey=\" + api_key\n\n  const response = await fetch(url);\n  const data = await response.json();\n\n  const randomNumber = Math.round(Math.random() * 99)\n  const article = data.articles[randomNumber];\n\n  const articleToDB = {\n    title: article.title,\n    shortDescription: article.description,\n    mainText: article.content,\n    categories: [\"utrikes\"],\n    author: article.author,\n    images: [article.urlToImage]\n  }\n\n  let duplicate = false\n  stateArticles.forEach(articleFromState => {\n    if (articleFromState.title === articleToDB.title) {\n      duplicate = true;\n    }\n  })\n\n  if (!duplicate) {\n    return articleToDB\n  }\n}\n\nexport{\n  fetchArticles,\n  fetchArticlesByCategory,\n  fetchArticlesBySearch,\n  postArticle,\n  deleteArticle,\n  updateArticle,\n  incrementViewCount,\n  fetchArticleAndSendToDatabase\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}